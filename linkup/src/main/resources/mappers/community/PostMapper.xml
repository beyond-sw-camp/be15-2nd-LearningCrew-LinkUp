<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learningcrew.linkup.community.query.mapper.PostMapper">

    <!--게시글 전체 목록 조회 쿼리-->
    <select id="selectAllPosts" parameterType="com.learningcrew.linkup.community.query.dto.request.PostRequest"
            resultType="com.learningcrew.linkup.community.query.dto.response.PostDTO">
        SELECT
        p.post_id AS postId,
        p.user_id AS userId,
        p.title AS title,
        p.content AS content,
        p.is_notice AS isNotice,
        p.created_at AS createdAt,
        p.updated_at AS updatedAt
        FROM community_post p
        WHERE p.is_deleted = 'N'
        <if test="isNotice != null">
            AND p.is_notice = #{isNotice}
        </if>
        <if test="keyword != null and keyword != ''">
            AND (p.title LIKE CONCAT('%', #{keyword}, '%')
            OR p.content LIKE CONCAT('%', #{keyword}, '%'))
        </if>
        ORDER BY p.created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!--    게시글 개수 조회 쿼리-->
    <select id="countPosts" parameterType="com.learningcrew.linkup.community.query.dto.request.PostRequest"
            resultType="long">
        SELECT COUNT(*)
        FROM community_post p
        WHERE p.is_deleted = 'N'
        <if test="isNotice != null">
            AND p.is_notice = #{isNotice}
        </if>
        <if test="keyword != null and keyword != ''">
            AND (p.title LIKE CONCAT('%', #{keyword}, '%')
            OR p.content LIKE CONCAT('%', #{keyword}, '%'))
        </if>
    </select>

    <!--   게시글 상세 조회 쿼리-->
    <resultMap id="postDetailResultMap" type="com.learningcrew.linkup.community.query.dto.response.PostDetailResponse">
    <id property="postId" column="post_id"/>
    <result property="userId" column="user_id"/>
    <result property="title" column="title"/>
    <result property="content" column="content"/>
    <result property="isNotice" column="is_notice"/>
    <result property="createdAt" column="created_at"/>
    <result property="updatedAt" column="updated_at"/>
    <result property="deletedAt" column="deleted_at"/>
    <collection property="imageUrl" ofType="java.lang.String" javaType="java.util.ArrayList">
        <result column="image_url"/>
    </collection>
    </resultMap>

    <select id="selectPostDetail" parameterType="int" resultMap="postDetailResultMap">
        SELECT
        p.post_id,
        p.user_id,
        p.title,
        p.content,
        a.image_url,
        p.is_notice,
        p.created_at,
        p.updated_at,
        p.deleted_at,
        c.comment_id,
        c.content AS comment_content,
        c.created_at AS comment_created_at
        FROM community_post p
        LEFT JOIN community_comment c ON p.post_id = c.post_id
        LEFT JOIN post_image a ON p.post_id = a.post_id
        WHERE p.post_id = #{postId}
        AND p.is_deleted = 'N'
    </select>

</mapper>